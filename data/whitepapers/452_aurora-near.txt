









What is Aurora? | Aurora Documentation






















Skip to main content
GitHub
Search
Getting Started
What is Aurora?
Tokenomics
Explore ecosystem (Aurora+)
FAQs
Bridge your assets
Introduction
Between Aurora and Near
To Ethereum
From Ethereum
Fast Bridge
Advanced features
Troubleshooting
Launch your chain (Aurora Chain)
Introduction
Configure your chain
Initialize a chain
Add whitelists
On-ramp from CEX (Forwarder)
Introduction
How to use
General instructions
Deposit from Binance
Deposit from KuCoin
Deposit from Coinbase
Technical Details
FAQs
Reference
Whitelists API
Build a cross-chain application (XCC)
Aurora to Near
Introduction
Usage examples
Near to Aurora
Introduction
Usage examples
Onboard users (Aurora Pass)
Introduction
Integrate Wallet Connect
Add your wallets
Web3Modal
RainbowKit
Promo Widget
Troubleshooting
Developer Reference
Aurora Engine
Networks Endpoints
Relayer JSON-RPC Methods
Precompiles
Opcodes
Ecosystem Contracts
Getting Started
What is Aurora?
On this page
What is Aurora?
Aurora is an EVM (Ethereum Virtual Machine) compatible blockchain and ecosystem, running as a decentralised layer 2 on the NEAR Protocol. It powers innovations such as Aurora Cloud, the infrastructure solution to onboard web2 businesses onto web3.
Aurora is an EVM implemented as a smart contract on NEAR Protocol which provides several advantages:
Aurora is fully compatible with Ethereum. Applications can be seamlessly deployed on Aurora without the need to re-write smart contracts.
All you need is to 
change the RPC endpoint
 you interact with.
Aurora runs on the NEAR Protocol, one of the highest-performance third-generation L1 protocols.
Transaction fees in Aurora are paid in the base currency, ETH, and are constant (
gas price
 is 0.07 GWei).
Aurora supports all the Ethereum ecosystem tools  â 
MetaMask
, 
Foundry
, 
Truffle
, 
Hardhat
, 
Remix
, etc. 
Aurora has protocol level meta transactions, which enables features such as gasless transactions for end users
How it works?
â
Aurora architecture is a relayer-based one, therefore natively supporting meta-transactions. It could be demonstrated by the picture below:
Notice, user pays gas fees in ETH, but RPC node pays them in NEAR tokens and executes a corresponding Near transaction corresponding to the user's EVM transaction. Which just equals to calling the 
Aurora Engine
 contract.
Interoperability
â
Auroraâs interoperability is completed by its integration of the Rainbow Bridge, enabling the seamless transfer of assets between Ethereum, NEAR, and Aurora blockchains. Aurora is integrated with 
LayerZero
 protocol, which allows communication between 40+ more EVM networks.
Besides, Aurora supports the deployment of multiple instances of EVMs on NEAR (Aurora Chains), forming Aurora Cloud, a network of interconnected blockchains that communicate through XCC (cross contract calls) at the base layer. Each individual instance called Aurora Chain can have its own ACLs (access control lists) to manage which EOAs (Externally Owned Accounts) are allowed to transact, to deploy contracts or to perform XCC within this instance.
By using 
XCC library
 you can also connect your Aurora contracts with the native Near Blockchain contracts, and also other way around. Here you can find more 
examples
.
Audits
â
Aurora thrives to provide robust and quality products, and engage with third party audits for all its core components.
See 
https://aurora.dev/audits
Edit this page
Next
Tokenomics
How it works?
Interoperability
Audits
Â© 2024 Aurora Labs







